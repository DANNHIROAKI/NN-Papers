# Configuration for inference with scoring.

from __gin__ import dynamic_registration
import __main__ as infer_script

from t5x import models
import seqio

include 'third_party/py/t5x/examples/t5/t5_1_1/base.gin'
include 'third_party/py/t5x/configs/runs/infer_from_tfexample_file.gin'

# `num_decodes` is equivalent to a beam size in a beam search decoding.
models.EncoderDecoderModel.predict_batch_with_aux.num_decodes = 4

infer_script.infer.write_fn = @infer_script.write_inferences_to_file
infer_script.write_inferences_to_file.json_encoder_cls = @seqio.TensorAndNumpyEncoder
infer_script.write_inferences_to_file.include_all_inputs = True
infer_script.infer.mode = 'score'
infer_script.infer.output_dir = %INFER_OUTPUT_DIR

seqio.TensorAndNumpyEncoder:
  max_ndarray_size = 8192  # prevents seqio from truncating examples.

DROPOUT_RATE = 0.0  # unused but needs to be specified
