# General params
Config.dataset_loader = 'blender'
Config.num_dataset_images = -1
Config.factor = 0

Config.cast_rays_in_eval_step = True
Config.cast_rays_in_train_step = True

Config.metric_harness_eval_config = {}

# Integrator
VolumeIntegrator.bg_intensity_range = (0, 0)

# Sampling and contraction
Config.near = 2
Config.far = 1e6

DensityMLP.backfacing_near = 2e-1
MaterialMLP.near_min = 1e-2

DensityMLP.warp_fn = @coord.contract_constant_squash_small
NeRFMLP.warp_fn = @coord.contract_constant_squash_small
MaterialMLP.warp_fn = @coord.contract_constant_squash_small
HashEncoding.bbox_scaling = 2.0

DensityMLP.unscented_mip_basis = 'mean'
DensityMLP.unscented_scale_mult = 0.0

NeRFMLP.unscented_mip_basis = 'mean'
NeRFMLP.unscented_scale_mult = 0.0

MaterialMLP.unscented_mip_basis = 'mean'
MaterialMLP.unscented_scale_mult = 0.0

# Regularizers
Config.param_regularizers = {
    'grid': (10, @jnp.mean, 2, 1),
}

Config.use_spline_interlevel_loss = True
Config.interlevel_loss_mults = (0.01, 0.01)
Config.interlevel_loss_blurs = (0.03, 0.003)

Config.distortion_loss_mult = 0.01
Config.distortion_loss_target = 'tdist'

Config.distortion_loss_curve_fn = \
    (@math.power_ladder, {'p': -0.25, 'premult': 10000.0})

# Optimization
Config.adam_beta1 = 0.9
Config.adam_beta2 = 0.99
Config.adam_eps = 1e-15
Config.batch_size = 8192
Config.render_chunk_size = 65536

Config.checkpoint_every = 5000
Config.print_every = 100
Config.visualize_every = 5000

Config.data_loss_type = 'rawnerf_unbiased_original'
Config.data_coarse_loss_mult = 1.0

MaterialModel.loss_weight = 1.0
MaterialModel.loss = 'rawnerf_unbiased_original'
MaterialModel.linear_to_srgb = False

MaterialModel.aux_loss_weight = 1.0
MaterialModel.aux_loss = 'charb'
MaterialModel.aux_linear_to_srgb = True

MaterialModel.aux_loss_weight_material = 0.0
MaterialModel.aux_loss_material = 'rawnerf_unbiased_original'
MaterialModel.aux_linear_to_srgb_material = False

Config.lr_delay_mult = 1e-08
Config.lr_delay_steps = 0
Config.lr_final = 1e-05
Config.lr_init = 0.0001
Config.max_steps = 80000

Config.grad_accum_steps = 1
Config.grad_max_norm = 0.0
Config.grad_max_val = 0.0

# HDR Settings
Config.use_exrs = True
Config.linear_to_srgb = False

NeRFMLP.rgb_activation = @math.safe_exp
NeRFMLP.rgb_bias_diffuse = -1.0

Material.rgb_activation = @math.safe_exp
Material.rgb_bias_diffuse = -1.0

Config.model_type = %ModelType.MATERIAL

# Hash encoding
HashEncoding.hash_map_size = 2097152
HashEncoding.max_grid_size = 8192
HashEncoding.scale_supersample = 1.0

# Density MLP
DensityMLP.density_activation = @math.safe_exp

DensityMLP.net_depth = 2
DensityMLP.net_width = 64

# NeRF MLP
NeRFMLP.num_glo_features = 0

NeRFMLP.use_directional_enc = True
NeRFMLP.use_reflections = True
NeRFMLP.deg_view = 5
NeRFMLP.enable_pred_roughness = True
NeRFMLP.use_diffuse_color = True
NeRFMLP.use_diffuse_only = False
NeRFMLP.use_specular_tint = True
NeRFMLP.use_n_dot_v = True

NeRFMLP.net_depth = 0
NeRFMLP.net_width = 64
NeRFMLP.bottleneck_width = 128

NeRFMLP.net_depth_viewdirs = 4
NeRFMLP.net_width_viewdirs = 128
NeRFMLP.skip_layer_dir = 2

NeRFMLP.use_grid = True
NeRFMLP.grid_representation = 'ngp'
NeRFMLP.grid_params = {
    'hash_map_size': 524288,
    'max_grid_size': 2048,
    'num_features': 4,
}

# Sampler
ProposalVolumeSampler.anneal_slope = 10.0
ProposalVolumeSampler.anneal_end = 1.0
ProposalVolumeSampler.anneal_clip = 0.4
ProposalVolumeSampler.resample_padding = 0.0

ProposalVolumeSampler.dilation_bias = 0.0
ProposalVolumeSampler.dilation_multiplier = 0.0

DensityMLP.grid_representation = 'ngp'
ProposalVolumeSampler.grid_params_per_level = (
    {
        'hash_map_size': 524288,
        'max_grid_size': 512,
        'num_features': 1,
    },
    {
        'hash_map_size': 524288,
        'max_grid_size': 1024,
        'num_features': 1,
    },
    {
        'hash_map_size': 524288,
        'max_grid_size': 2048,
        'num_features': 4,
    },
)

ProposalVolumeSampler.mlp_params_per_level = (
    {
      'disable_density_normals': False,
      'enable_pred_normals': False,
      'normals_for_filter_only': True,
      'backfacing_target': 'normals',
      'backfacing_near': 5e-2,
      'net_depth': 2,
      'net_width': 64,
    },
    {
      'disable_density_normals': False,
      'enable_pred_normals': False,
      'normals_for_filter_only': True,
      'backfacing_target': 'normals',
      'backfacing_near': 1e-1,
      'net_depth': 2,
      'net_width': 64,
    },
    {
      'disable_density_normals': False,
      'enable_pred_normals': True,
      'normals_for_filter_only': False,
      'backfacing_target': 'normals_to_use',
      'backfacing_near': 2e-1,
      'net_depth': 2,
      'net_width': 64,
    }
)

ProposalVolumeSampler.sampling_strategy = (
    (0, 0, 64),
    (1, 1, 64),
    (2, 2, 32),
)
ProposalVolumeSampler.raydist_fn = (
    @math.power_ladder,
    @math.inv_power_ladder, {'p': -1.5, 'premult': 2}
)

# Material
MaterialModel.resample_material = True
MaterialModel.render_variate = True

MaterialMLP.num_secondary_samples = 2
MaterialMLP.render_num_secondary_samples = 2

MaterialMLP.importance_sampler_configs = (
    ('microfacet', 2),
    ('cosine', 1),
    ('light', 1),
)
MaterialMLP.render_importance_sampler_configs = (
    ('microfacet', 2),
    ('cosine', 1),
    ('light', 1),
)

MaterialMLP.brdf_bias = {
    'albedo': 0.0,
    'specular_albedo': 2.0,
    'roughness': -1.0,
    'F_0': 1.0,
    'metalness': -1.0,
    'diffuseness': 0.0,
}

MaterialMLP.brdf_activation = {
    'albedo': @jax.nn.sigmoid,
    'specular_albedo': @jax.nn.sigmoid,
    'roughness': @jax.nn.sigmoid,
    'F_0': @jax.nn.sigmoid,
    'metalness': @jax.nn.sigmoid,
    'diffuseness': @jax.nn.sigmoid,
}

MaterialMLP.rgb_emission_activation = @math.safe_exp
MaterialMLP.emission_window_frac = 0.1
MaterialMLP.emission_variate_weight_start = 0.1
MaterialMLP.emission_variate_weight_end = 0.01
MaterialMLP.rgb_bias_emission = -1.0

MaterialMLP.rgb_residual_albedo_activation = @jax.nn.sigmoid
MaterialMLP.rgb_bias_residual_albedo = -1.0

MaterialMLP.net_depth = 0
MaterialMLP.net_width = 64
MaterialMLP.bottleneck_width = 128

MaterialMLP.use_brdf_correction = True
MaterialMLP.anisotropic_brdf_correction = False
MaterialMLP.net_depth_brdf = 0
MaterialMLP.net_width_brdf = 64
MaterialMLP.deg_brdf = 2
MaterialMLP.deg_brdf_anisotropic = 2

MaterialMLP.use_density_feature = True
MaterialMLP.affine_density_feature = True
MaterialMLP.use_mis = True

MaterialMLP.use_grid = True
MaterialMLP.grid_representation = 'ngp'
MaterialMLP.grid_params = {
    'hash_map_size': 524288,
    'num_features': 4,
    'max_grid_size': 2048,
}

MaterialMLP.use_corrected_normals = True
MaterialMLP.filter_backfacing = True
MaterialMLP.use_mesh_points = False
MaterialMLP.use_mesh_points_for_prediction = False
MaterialMLP.use_mesh_normals = False

MaterialMLP.use_diffuse_emission = False

# Light Sampler
Config.num_light_samples = 1

LightMLP.normals_target = 'normals_to_use'
LightMLP.vmf_scale = 1.0
LightMLP.num_components = 32

LightMLP.net_depth = 2
LightMLP.net_width = 64
LightMLP.bottleneck_width = 128

LightMLP.use_density_feature = False
LightMLP.use_grid = True
LightMLP.grid_representation = 'ngp'
LightMLP.grid_params = {
    'hash_map_size': 524288,
    'num_features': 4,
    'max_grid_size': 1024,
}

# Stopgrad
MaterialModel.stopgrad_samples = False
MaterialModel.stopgrad_rgb_weight = 0.0
MaterialModel.stopgrad_weights_weight = 1.0

MaterialMLP.stopgrad_secondary_rgb = False
MaterialMLP.stopgrad_secondary_rgb_weight = 1.0

MaterialMLP.normals_target = 'normals_to_use'
MaterialMLP.enable_normals_offset = False

MaterialMLP.stopgrad_normals = False
MaterialMLP.stopgrad_normals_weight = 1.0

MaterialMLP.stopgrad_material = True
MaterialMLP.stopgrad_light = True

MaterialMLP.stopgrad_samples = False

# Extra losses
MaterialMLP.use_diffuse_emission = False
Config.emission_zero_loss_mult = 0.0
Config.emission_constant_loss_mult = 0.0

Config.extra_losses = {
    # 'extra_ray': 0.01,
    # 'radiometric': 0.1, # Needs emission
    # 'bmild': {'cache': 1.0, 'main': 1.0},
    'light_sampling': 1.0,
}