import data.loader
import data.maskrcnn_parser
import utils.dataset_utils


MIN_LEVEL = %gin.REQUIRED
MAX_LEVEL = %gin.REQUIRED
OUTPUT_SIZE = %gin.REQUIRED
TRAIN_BS = %gin.REQUIRED
EVAL_BS = %gin.REQUIRED
AUG_SCALE_MIN = %gin.REQUIRED
AUG_SCALE_MAX = %gin.REQUIRED
CATG_PAD_SIZE = %gin.REQUIRED
MAX_NUM_INSTANCES = %gin.REQUIRED
ANCHOR_SIZE = %gin.REQUIRED
TRAIN_FILE_PATTERN = %gin.REQUIRED
EVAL_FILE_PATTERN = %gin.REQUIRED

train/tfrecords_loader:
  file_pattern = %TRAIN_FILE_PATTERN
  shuffle_files = True
eval/tfrecords_loader:
  file_pattern = %EVAL_FILE_PATTERN
  shuffle_files = False


# Mask RCNN paser.
maskrcnn_map_fn:
  output_size = %OUTPUT_SIZE
  min_level = %MIN_LEVEL
  max_level = %MAX_LEVEL
  num_scales = 1
  aspect_ratios = [1.0, 2.0, 0.5]
  anchor_size = %ANCHOR_SIZE
  max_num_instances = %MAX_NUM_INSTANCES
  include_mask = False
  mask_crop_size = 112
  use_bfloat16 = True
  normalize_image_values = @clip_image_normalization_values()

train/maskrcnn_map_fn:
  rpn_match_threshold=0.7
  rpn_unmatched_threshold=0.3
  rpn_batch_size_per_im=256
  rpn_fg_fraction=0.5
  aug_rand_hflip=True
  aug_scale_min=%AUG_SCALE_MIN
  aug_scale_max=%AUG_SCALE_MAX
  skip_crowd_during_training=True
  mode='train'

eval/maskrcnn_map_fn:
  mode='predict_with_gt'

# Input functions.
get_input:
  feature_names = ['images', 'texts', 'labels']
  label_names = ['labels']
  repeat = True
  cache = True
  shuffle = True
  batch_size = %TRAIN_BS

# Text detection wrapper.
load_dataset_vocab_embed.pad_to_size = %CATG_PAD_SIZE

train/get_multitask_text_detection_parser_fn:
  parser_fn = @train/maskrcnn_map_fn()
  is_training = True

train/get_input:
  loader_fn = @train/tfrecords_loader
  map_fn = @train/get_multitask_text_detection_parser_fn()

eval/get_multitask_text_detection_parser_fn:
  parser_fn = @eval/maskrcnn_map_fn()
  is_training = False

eval/get_input:
  loader_fn = @eval/tfrecords_loader
  map_fn = @eval/get_multitask_text_detection_parser_fn()
  batch_size = %EVAL_BS
  repeat = False
  shuffle = False
