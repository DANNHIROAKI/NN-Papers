    hessian_row_j = ^(
      ydot{}, y_start[:], t_final[],  # F1
      y_final[:] = ODE(ydot{}=ydot, # F2
                       y[:]=y_start[:],
                       t0[]=0,
                       t1[]=t_final[])[:],
      # Value for which we obtain the Hessian - not needed here:
      # T_val = T(pos0[:]=y_start[:], pos1[:]=y_end[:])
      s_T_y_start[:] = T0(pos0[:]=y_start[:], pos1[:]=y_final[:]),  # F3
      s_T_y_final[:] = T1(pos0[:]=y_start[:], pos1[:]=y_final[:]),  # F4
      obp1_start[:] = &concat(0, y_final[:], s_T_y_final[:])[:],  # F5
      ydot2{} = OBP(ydot{}=ydot),
      s_T_y_start_via_y_final[:] = ODE(ydot{}=ydot2, # F6
                                       y[:]=obp1_start,
                                       t0[]=t_final[], t1[]=0)[dim:],
      # The j-th entry of the gradient of T_val.
      # Not needed, but shown to document structural dependency.
      # grad_T_val_entry_j[] = (
      #  [s_T_y_start[:] + s_T_y_start_via_y_final[:]][j]),  # F7
      onehot_j[:] = &onehot(j, dim),
      # We want to know the sensitivity of grad_T_val_entry_j[] on
      # y0. Subsequently, let zj_{X} be the sensitivity of this quantity
      # on the corresponding intermediate quantity {X}.
      # Processing dependencies of intermediate quantities in reverse,
      # obp1_start, then s_T_y_final, s_T_y_start, finally y_final:
      z_obp1_start = ODE(ydot{}=OBP(ydot{}=ydot2),
                         y[:]=&concat(0,
                                      y_start[:],
                                      s_T_y_start_via_y_final[:],
                                      &zeros(dim),
                                      onehot_j))[2*dim:],
      z_s_T_y_final[:] = z_obp1_start[dim:],  # from F5
      z_s_T_y_start[:] = onehot_j[:],  # from F7
      z_y_final[:] = (
        # from F5
        z_obp1_start[:dim] +
        # from F4
        &es(T11(pos0[:]=y_start[:], pos1[:]=y_final[:]) @ a, b;
            z_s_T_y_final[:] @ b -> a) +
        # from F3
        &es(T01(pos0[:]=y_start[:], pos1[:]=y_final[:]) @ a, b;
            z_s_T_y_start[:] @ b -> a))
      ) ->
      # The result is "z_y_start[:]", i.e. grad_T_val[j, d y_start[:]].
      ( # from F3
        &es(T00(pos0[:]=y_start[:], pos1[:]=y_final[:]) @ a, b;
            z_s_T_y_start @ a -> b) +
        # from F4
        &es(T01(pos0[:]=y_start[:], pos1[:]=y_final[:]) @ a, b;
             z_s_T_y_start @ a -> b) +
        # from F2
        ODE(ydot{}=ydot2,
            y[:]=&concat(0, y_final[:], z_y_final[:])[:],
            t0[]=t_final[],
            t1[]=0)[dim:])
